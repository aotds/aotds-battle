import Battle, { BattleState } from '../dux';
import bogey from '../dux/bogeys/bogey';
import fp from 'lodash/fp';
import D from 'debug';

const debug = D('aotds:sample:t2');

const { init_game, set_orders, play_turn } = Battle.actions;
const { getBogey } = Battle.selectors;

const { getFirecon, getWeapon } = bogey.selectors;

export const dice = [
    [6, 5], [3], [1], [1], [90]
].map( r => [ r ] );

function findAction(log: any, {type}: {type: string}): any {
    return log.map(
        (action) => [
            action.type === type ? action : [],
            action.subactions ? findAction(action.subactions,{type}) : []
        ]
    ).flat(Infinity);
}

const lastTurn = log =>fp.last(findAction(log,Battle.actions.play_turn))

export const tests = (state: BattleState) => async t => {

    // HERE

    t.is( siduri.structure.hull.current, 3, "siduri got hit" );
    t.is( enkidu.structure.hull.current, 4, "not enkidu" );

    // console.log("waiting");

    // const p = new Promise( resolve => setTimeout(resolve,1000000));
    // await p;
};
